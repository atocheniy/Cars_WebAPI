@{
    ViewBag.Title = "Cars";
}

<h2>Cars</h2>

<table id="carsTable" class="table table-bordered table-hover">
    <thead>
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>City</th>
            <th>State</th>
            <th>Phone</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody></tbody>
</table>

<br />
<input type="button" class="btn btn-primary" id="show" value="Show" />
<input type="button" class="btn" id="state" value="Show by state" />
<input type="button" class="btn" id="create" value="Create" />
<input type="button" class="btn" id="update" value="Update" />
<br />

<script type="text/javascript">

    $('#create').click(function (e) {
        //alert('create');

        $.ajax({
            url: '/api/authors',
            method: "POST",
            data: JSON.stringify({
                au_id: "555-888-999",
                au_fname: "Maria",
                au_lname: "Petrova",
                city: "Donetsk",
                state: "CA",
                phone: "12356",
                address: "Lenina st., 20",
                zip: "12345"
            }),
            dataType: 'JSON',
            contentType: 'application/json',
            beforeSend: function (xheader) {
                var token = sessionStorage.getItem(tokenKey);
                xheader.setRequestHeader("Authorization", "Bearer " + token);
            },
            success: function (data, textStatus, xhr) {
                console.log(data);
                showAllAuthors();
            },
            error: function (data, textStatus, errorThrown) {
                console.log(data);
            }
        });
    });

    $('#update').click(function (e) {
        //alert('update');

        $.ajax({
            url: '/api/authors/555-888-999',
            method: "PUT",
            data: JSON.stringify({
                au_id: "555-888-999",
                au_fname: "Maria",
                au_lname: "Petrova",
                address: "Lenina st., 20",
                city: "Moskow",
                state: "MS",
                phone: "12356",
                zip: "12345"
            }),
            dataType: 'JSON',
            contentType: 'application/json',
            beforeSend: function (xheader) {
                var token = sessionStorage.getItem(tokenKey);
                xheader.setRequestHeader("Authorization", "Bearer " + token);
            },
            success: function (data, textStatus, xhr) {
                console.log(data);
                showAllAuthors();
            },
            error: function (xhr, textStatus, errorThrown) {
                console.log('Error in Operation');
            }
        });
    });

    $('#state').click(function (e) {
        //alert('state');

        // подача Ajax-запроса на сервер при помощи JQuery
        $.ajax({
            url: '/api/authors/state/ca',
            method: "GET",
            dataType: 'JSON',
            contentType: 'application/json',
            cache: false,
            processData: false,
            beforeSend: function (xheader) {
                var token = sessionStorage.getItem(tokenKey);
                xheader.setRequestHeader("Authorization", "Bearer " + token);
            },
            success: function (data) {
                console.log(data);

                // получить ссылку на таблицу с результатами
                var table = $('#authorsTable');

                // удалить все старые строки
                table.find("tbody tr").remove();

                // перебрать коллекцию в Json и создать новые строки таблицы на их основе
                data.forEach(function (author) {
                    table.append("<tr><td>" + author.au_id + "</td><td>" + author.au_fname + ' ' + author.au_lname + "</td><td>" + author.city + "</td><td>" + author.state + "</td><td>" + author.phone + "</td><td><button class='btn-link js-delete' data-au-id=" + author.au_id + ">Delete</button></td></tr>");
                });
            }
        })
    });

    function showAllAuthors() {
        // подача Ajax-запроса на сервер при помощи JQuery
        $.ajax({
            url: '/api/authors',
            method: "GET",
            dataType: 'JSON',
            contentType: 'application/json',
            cache: false,
            processData: false,
            beforeSend: function (xheader) {
                var token = sessionStorage.getItem(tokenKey);
                console.log(token);
                xheader.setRequestHeader("Authorization", "Bearer " + token);
            },
            success: function (data) {
                console.log(data);

                // получить ссылку на таблицу с результатами
                var table = $('#authorsTable');

                // удалить все старые строки
                table.find("tbody tr").remove();

                // перебрать коллекцию в Json и создать новые строки таблицы на их основе
                data.forEach(function (author) {
                    table.append("<tr><td>" + author.au_id + "</td><td>" + author.au_fname + ' ' + author.au_lname + "</td><td>" + author.city + "</td><td>" + author.state + "</td><td>" + author.phone + "</td><td><button class='btn-link js-delete' data-au-id=" + author.au_id + ">Delete</button></td></tr>");
                });
            },
            error: function (data) {
                alert('Error: ' + data.statusText);
                console.log(data);
            }
        })
    }

    $('#show').click(function (e) {
        showAllAuthors();
    });

    $("#authorsTable").on("click", ".js-delete", function () {
        var button = $(this);

        if (confirm("Are you sure you want to delete this book?")) {
            $.ajax({
                url: "/api/authors/" + button.attr("data-au-id"),
                method: "DELETE",
                beforeSend: function (xheader) {
                    var token = sessionStorage.getItem(tokenKey);
                    xheader.setRequestHeader("Authorization", "Bearer " + token);
                },
                success: function () {
                    //alert("deleted!");
                    var row = button[0].parentNode.parentNode;
                    row.parentNode.removeChild(row);
                },
                error: function (data) {
                    alert('Error: ' + data.statusText);
                    console.log(data);
                }
            })
        }
    });

</script>